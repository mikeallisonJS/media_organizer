name: Build Installers

on:
  release:
    types: [created]

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools==70.3.0 py2app

      - name: Install MediaInfo
        run: |
          brew install mediainfo

      - name: Build macOS app
        run: |
          # Use the build_mac.py file instead of creating setup.py
          cp build_mac.py setup.py

      - name: Build macOS app bundle
        run: |
          python setup.py py2app

      - name: Create DMG
        run: |
          # Install create-dmg
          brew install create-dmg

          # Create DMG
          create-dmg \
            --volname "Archimedius Installer" \
            --volicon "resources/archimedius.icns" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "Archimedius.app" 200 190 \
            --hide-extension "Archimedius.app" \
            --app-drop-link 600 185 \
            "Archimedius-Installer.dmg" \
            "dist/Archimedius.app"

      - name: Upload macOS installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./Archimedius-Installer.dmg
          asset_name: Archimedius-${{ github.event.release.tag_name }}-macOS.dmg
          asset_content_type: application/octet-stream

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller requests

      - name: Install NSIS
        run: |
          choco install nsis -y

      - name: Build Windows executable and installer
        run: |
          python build_win.py

      - name: Upload Windows installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./Archimedius-Setup.exe
          asset_name: Archimedius-${{ github.event.release.tag_name }}-Windows.exe
          asset_content_type: application/octet-stream

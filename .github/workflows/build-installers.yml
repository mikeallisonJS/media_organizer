name: Build Installers

on:
  release:
    types: [created]

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools==70.3.0 py2app

      - name: Install MediaInfo
        run: |
          brew install mediainfo

      - name: Build macOS app
        run: |
          # Use the build_mac.py file instead of creating setup.py
          cp build_mac.py setup.py

      - name: Build macOS app bundle
        run: |
          python setup.py py2app

      - name: Create DMG
        run: |
          # Install create-dmg
          brew install create-dmg

          # Create DMG
          create-dmg \
            --volname "Archimedius Installer" \
            --volicon "resources/archimedius.icns" \
            --window-pos 200 120 \
            --window-size 800 400 \
            --icon-size 100 \
            --icon "Archimedius.app" 200 190 \
            --hide-extension "Archimedius.app" \
            --app-drop-link 600 185 \
            "Archimedius-Installer.dmg" \
            "dist/Archimedius.app"

      - name: Upload macOS installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./Archimedius-Installer.dmg
          asset_name: Archimedius-${{ github.event.release.tag_name }}-macOS.dmg
          asset_content_type: application/octet-stream

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller requests

      - name: Install NSIS
        run: |
          choco install nsis -y

      - name: Set environment variables
        run: |
          echo "APP_NAME=$(python -c "import defaults; print(defaults.APP_NAME)")" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build Windows executable and installer
        run: |
          python build_win.py

      - name: Verify installer file
        id: find_installer
        run: |
          dir
          echo "Looking for installer file..."
          if (Test-Path "Archimedius-Setup.exe") {
            echo "Installer file found at root"
            echo "INSTALLER_PATH=Archimedius-Setup.exe" | Out-File -FilePath $env:GITHUB_ENV -Append
          } else {
            echo "Searching for installer file..."
            Get-ChildItem -Path . -Recurse -Include "*Setup.exe", "*.exe" | ForEach-Object { echo "Found: $($_.FullName)" }
            $installerFile = Get-ChildItem -Path . -Recurse -Include "*Setup.exe" | Select-Object -First 1
            if ($installerFile) {
              echo "Found: $($installerFile.FullName)"
              echo "INSTALLER_PATH=$($installerFile.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Append
            } else {
              echo "No installer file found"
              echo "Checking dist directory:"
              if (Test-Path "dist") {
                Get-ChildItem -Path "dist" -Recurse | ForEach-Object { echo "dist item: $($_.FullName)" }
              } else {
                echo "dist directory not found"
              }
              exit 1
            }
          }

      - name: Upload Windows installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.INSTALLER_PATH }}
          asset_name: Archimedius-${{ github.event.release.tag_name }}-Windows.exe
          asset_content_type: application/octet-stream
